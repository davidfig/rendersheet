## rendersheet.js
renders a canvas spritesheet for use with pixi.js

## Rationale
I needed a way to generate spritesheets on the fly based on canvas drawings. This allows me to resize the drawings based on different resolutions. It works by passing the rendersheet two functions: a drawing function and a measure function. It currently uses a rudimentary packing algorithm.

## Code Example

    // set up rendersheet
    var sheet = new RenderSheet();

    // draw triangle textures on rendersheet
    sheet.add('triangle', triangleDraw, triangleMeasure, {size: 50, 'red'});

    // render the sheet
    sheet.render();

    // show the rendersheet (used for debug purposes)
    var canvas = sheet.show();

    // create a sprite using the rendersheet
    var sprite = new PIXI.Sprite(sheet.getTexture(triangle));

    // drawing function to generate the canvas triangle
    function triangleDraw(c, params)
    {
        var size = params.size;
        var half = params.size / 2;
        c.beginPath();
        c.fillStyle = params.color;
        c.moveTo(half, 0);
        c.lineTo(0, size);
        c.lineTo(size, size);
        c.closePath();
        c.fill();
    }

    // measure function to provide dimensions for canvas triangle
    function triangleMeasure(c, params)
    {
        return {width: params.size, height: params.size};
    }

## Installation

    npm install yy-rendersheet

## Live Example
https://davidfig.github.io/rendersheet/

see also

* https://davidfig.github.io/debug/
* https://davidfig.github.io/update/
* https://davidfig.github.io/animate/
* https://davidfig.github.io/renderer/
* https://davidfig.github.io/viewport/

# API Reference
{{>main}}

* * *

Copyright (c) 2016 YOPEY YOPEY LLC - MIT License - Documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown)